{"version":3,"file":"static/js/223.6388a3f4.chunk.js","mappings":"yJAEA,MAAMA,EAAoB,CACxBC,EAACA,IACQ,IAAIC,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAeC,aACrBC,OAAQ,6BACRC,KAAM,IAGVC,EAACA,CAACC,EAAWF,IACJ,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAeM,aACrBJ,OAAQ,wBAAFK,OAA2BF,EAAS,yBAAAE,OAAyBJ,GACnEA,SAGJK,EAACA,CAACC,EAASN,IACF,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAeM,aACrBJ,OAAQ,sBAAFK,OAAyBE,EAAO,yBAAAF,OAAyBJ,GAC/DA,SAGJO,EAACA,CAACL,EAAWI,EAASN,IACb,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAeM,aACrBJ,OAAQ,sBAAFK,OAAyBE,EAAO,6BAAAF,OAA8BF,EAAS,cAAAE,OAAcJ,GAC3FA,SAGJQ,EAACA,CAACC,EAAMC,EAAOV,IACN,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAec,gBACrBZ,OAAQ,kCAAFK,OAAqCK,EAAI,cAAAL,OAAcJ,EAAI,aAAAI,OAAYM,EAAK,KAClFV,SAGJY,EAACA,CAACH,EAAMC,EAAOV,IACN,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAegB,eACrBd,OAAQ,wBAAFK,OAA2BK,EAAI,cAAAL,OAAcJ,EAAI,aAAAI,OAAYM,EAAK,KACxEV,SAGJc,EAACA,CAACL,EAAMC,EAAOV,IACN,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAec,gBACrBZ,OAAQ,qCAAFK,OAAwCK,EAAI,cAAAL,OAAcJ,EAAI,aAAAI,OAAYM,EAAK,KACrFV,SAGJe,EAACA,CAACN,EAAMC,EAAOV,IACN,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAegB,eACrBd,OAAQ,2BAAFK,OAA8BK,EAAI,cAAAL,OAAcJ,EAAI,aAAAI,OAAYM,EAAK,KAC3EV,SAIJgB,EAACA,CAACC,EAAMjB,IACC,IAAIL,EAAAA,EAAW,CACpBC,KAAMC,EAAAA,EAAeqB,UACrBnB,OAAQ,uBAAFK,OAA0Ba,EAAI,oBAAAb,OAAoBJ,GACxDA,S","sources":["../../node_modules/media-captions/dist/prod/errors.js"],"sourcesContent":["import { P as ParseError, c as ParseErrorCode } from './index.js';\n\nconst ParseErrorBuilder = {\n  p() {\n    return new ParseError({\n      code: ParseErrorCode.BadSignature,\n      reason: \"missing WEBVTT file header\",\n      line: 1\n    });\n  },\n  q(startTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue start timestamp \\`${startTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  r(endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is invalid on line ${line}`,\n      line\n    });\n  },\n  s(startTime, endTime, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadTimestamp,\n      reason: `cue end timestamp \\`${endTime}\\` is greater than start \\`${startTime}\\` on line ${line}`,\n      line\n    });\n  },\n  w(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  v(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown cue setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  u(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadSettingValue,\n      reason: `invalid value for region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  t(name, value, line) {\n    return new ParseError({\n      code: ParseErrorCode.UnknownSetting,\n      reason: `unknown region setting \\`${name}\\` on line ${line} (value: ${value})`,\n      line\n    });\n  },\n  // SSA-specific errors\n  T(type, line) {\n    return new ParseError({\n      code: ParseErrorCode.BadFormat,\n      reason: `format missing for \\`${type}\\` block on line ${line}`,\n      line\n    });\n  }\n};\n\nexport { ParseErrorBuilder };\n"],"names":["ParseErrorBuilder","p","ParseError","code","ParseErrorCode","BadSignature","reason","line","q","startTime","BadTimestamp","concat","r","endTime","s","w","name","value","BadSettingValue","v","UnknownSetting","u","t","T","type","BadFormat"],"sourceRoot":""}